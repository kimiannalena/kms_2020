{"version":3,"sources":["./src/app/components/category-input/category-input.component.ts","./src/app/components/category-input/category-input.component.html","./src/app/model/mocks/categoryMock.ts","./src/app/model/mocks/taskMock.ts","./src/environments/environment.ts","./src/app/directives/auto-focus.directive.ts","./src/app/components/testitest/testitest.component.ts","./src/app/components/testitest/testitest.component.html","./src/app/model/Priority.ts","./src/app/model/Task.ts","./src/app/model/Category.ts","./src/app/pipes/search-filter/search-filter.pipe.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/task-edit-modal/add-task-modal.component.ts","./src/app/components/task-edit-modal/add-task-modal.component.html","./src/app/app.module.ts","./src/app/components/task-table/task-table.component.ts","./src/app/components/task-table/task-table.component.html","./src/app/service/categoryService/category.service.ts","./src/app/components/task-input/task-input.component.ts","./src/app/components/task-input/task-input.component.html","./src/app/pipes/priority/priority.pipe.ts","./src/app/service/taskService/task.service.ts","./src/app/components/category-list/category-list.component.ts","./src/app/components/category-list/category-list.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Category} from '../../model/Category';\nimport {CategoryService} from '../../service/categoryService/category.service';\n\n@Component({\n  selector: 'app-category-input',\n  templateUrl: './category-input.component.html',\n  styleUrls: ['./category-input.component.css']\n})\nexport class CategoryInputComponent implements OnInit {\n  @Output() addCategory: EventEmitter<any> = new EventEmitter();\n\n  public title: string;\n  public newCategory = new Category('');\n\n  constructor(public categoryService: CategoryService) {\n    this.title = '';\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmitC(): void {\n    // call service\n    this.newCategory.title = this.title;\n    this.categoryService.addCategory(this.newCategory);\n    // @ts-ignore\n    document.getElementById('categoryInput').value = '';\n  }\n}\n","<div class=\"container\" id=\"task-container\">\n  <div id=\"form-wrapper\">\n    <form id=\"categoryForm\" (ngSubmit)=\"onSubmitC()\">\n      <h3>Add New Category</h3>\n      <div class=\"input-group\">\n        <label for=\"categoryInput\"></label>\n        <input id=\"categoryInput\" type=\"text\" class=\"form-control col-8\" required name=\"title\" placeholder=\"Category\" [(ngModel)]=\"title\">\n        <div class=\"input-group-append\">\n          <button type=\"submit\" id=\"categorySubmit\" class=\"btn\">Submit</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n\n\n","import { Category } from '../Category';\n\nexport let testCat0: Category = new Category('Not asssigned cat'); // just for testing purpose\nexport let testCat1: Category = new Category('Privat');\nexport let testCat2: Category = new Category('Arbeit');\nexport let testCat3: Category = new Category('Uni');\nexport let testCat4: Category = new Category('Familie');\nexport let testCat5: Category = new Category('Freunde');\n","import { Task } from '../Task';\nimport { Priority } from '../Priority';\nimport { testCat0, testCat1, testCat2, testCat3, testCat4, testCat5 } from './categoryMock';\n\nconst testTask0: Task = new Task('Hausübung', testCat3, Priority.medium);\nconst testTask1: Task = new Task('Einkaufen', testCat1, Priority.high);\nconst testTask2: Task = new Task('Treffen', testCat5, Priority.low);\nconst testTask3: Task = new Task('Putzen', testCat1, Priority.low);\nconst testTask4: Task = new Task('Essen', testCat1, Priority.medium);\nconst testTask5: Task = new Task('Geschenke', testCat4, Priority.medium);\nconst testTask6: Task = new Task('Kochen', testCat2, Priority.high);\nconst testTask7: Task = new Task('Joggen', testCat2, Priority.medium);\nconst testTask8: Task = new Task('Garten', testCat2, Priority.medium);\nconst testTask9: Task = new Task('Müll', testCat2, Priority.low);\nconsole.log(testTask1.priority);\nexport let taskListMock: Task[] =\n  [testTask0, testTask1, testTask2, testTask3, testTask4, testTask5, testTask6, testTask7, testTask8, testTask9];\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { AfterContentInit, Directive, ElementRef, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appAutoFocus]'\n})\nexport class AutoFocusDirective implements AfterContentInit {\n\n  @Input() public appAutoFocus = true;\n\n  public constructor(private el: ElementRef) {\n\n  }\n\n  public ngAfterContentInit(): void {\n\n    setTimeout(() => {\n\n      this.el.nativeElement.focus();\n\n    }, 0);\n\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-testitest',\n  templateUrl: './testitest.component.html',\n  styleUrls: ['./testitest.component.css']\n})\nexport class TestitestComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>testitest works!</p>\n","export enum Priority {\n   low,\n  medium,\n   high\n}\n","import { Priority } from './Priority';\nimport {Category} from './Category';\n\nexport class Task {\n\n  constructor(title: string, category: Category, priority: Priority, done?: boolean) { // category?: Category,\n    this.title = title;\n    this.done = false;\n    this.priority = priority;\n    this.category = category;\n    this.date = new Date();\n    this.id = Task.taskCounter++;\n  }\n  private static taskCounter = 1;\n  id: number;\n  title: string;\n  done: boolean;\n  date: Date;\n  priority: Priority;\n  category: Category;\n\n}\n","export class Category {\n  constructor(title: string) {\n    this.id = Category.taskCounter++;\n    this.title = title;\n  }\n  private static taskCounter = 1;\n  id: number;\n  title: string;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Task } from '../../model/Task';\nimport { Category } from '../../model/Category';\n\n@Pipe({\n  name: 'searchFilter',\n  pure: false\n})\nexport class SearchFilterPipe implements PipeTransform {\n\n  transform(list: Task[], searchText: string, clickedCategories: Category[], searchFlag: boolean, catFlag: boolean): any {\n\n    const searchString: string = searchText.trim().toLocaleLowerCase();\n    let resultList: Task[] = list;\n    if (searchFlag) {\n       resultList = resultList.filter(task => task.title.toLocaleLowerCase().indexOf(searchString) !== -1);\n    }\n    if (catFlag) {\n      resultList = resultList.filter(task => {\n        return clickedCategories.includes(task.category);\n      });\n    }\n    return resultList;\n  }\n}\n","import { Component } from '@angular/core';\nimport { TaskService } from './service/taskService/task.service';\nimport { CategoryService } from './service/categoryService/category.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'todo-app';\n\n  constructor(public taskService: TaskService, public categoryService: CategoryService) {\n    this.categoryService.setTaskService(taskService);\n  }\n}\n","<nav class=\"navbar navbar-dark bg-dark\">\n  <a href=\"#\" class=\"navbar-brand home\">TodoApp</a>\n</nav>\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-8\">\n      <div>\n        <app-task-table></app-task-table>\n      </div>\n    </div>\n    <div class=\"col-4\">\n      <div class=\"side\">\n        <app-task-input></app-task-input>\n        <app-category-input></app-category-input>\n        <app-category-element></app-category-element>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CategoryService } from '../../service/categoryService/category.service';\nimport { Priority } from '../../model/Priority';\n\n@Component({\n  selector: 'app-add-task-modal',\n  templateUrl: './add-task-modal.component.html',\n  styleUrls: ['./add-task-modal.component.css']\n})\nexport class AddTaskModalComponent implements OnInit {\n  public title: string;\n  public priority: Priority;\n  public categoryTitle: string;\n\n  constructor(public activeModal: NgbActiveModal,\n              public categoryService: CategoryService) {\n    this.title = categoryService.taskService.taskToEdit.title;\n    this.priority = categoryService.taskService.taskToEdit.priority;\n    this.categoryTitle = categoryService.taskService.taskToEdit.category.title;\n  }\n\n  save(): void {\n    // check if at least one attribute needs an edit\n    if (this.title.trim().length > 0 || this.priority in Priority || this.categoryTitle.trim().length > 0) {\n      this.activeModal.close({title: this.title, categoryTitle: this.categoryTitle, priority: this.priority});\n    }\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title\">Edit Entry #{{this.categoryService.taskService.taskToEdit.id}}</h4>\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss()\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <div class=\"form-group\">\n    <label for=\"itemInputTitle\">Set Title</label>\n    <input [appAutoFocus]=\"true\" class=\"form-control\" id=\"itemInputTitle\" [(ngModel)]=\"title\">\n    <label for=\"taskCategoryInput\">Set Category</label>\n<!--    <input type=\"text\" class=\"form-control\" id=\"itemInputCategory\" [(ngModel)]=\"categoryTitle\">-->\n    <select name=\"Category\" id=\"taskCategoryInput\" [(ngModel)]=\"categoryTitle\" class=\"form-control col-4\" >\n      <option selected disabled value=\"\">Category</option>\n      <option *ngFor=\"let cat of this.categoryService.CATEGORYLIST\"> {{cat.title}} </option>\n    </select>\n\n    <label for=\"itemInputPriority\">Set Priority</label>\n    <select name=\"priority\" id=\"itemInputPriority\" [(ngModel)]=\"priority\" class=\"form-control col-4\">\n      <option selected disabled value=\"\">PriorityMock</option>\n      <option value=\"0\">low</option>\n      <option value=\"1\">medium</option>\n      <option value=\"2\">high</option>\n    </select>\n\n  </div>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-outline-dark\"\n          (click)=\"activeModal.dismiss()\">Schließen\n  </button>\n  <button type=\"submit\" class=\"btn btn-dark\" (click)=\"save()\">Save</button>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { TaskInputComponent } from './components/task-input/task-input.component';\nimport { TaskTableComponent } from './components/task-table/task-table.component';\nimport { AddTaskModalComponent } from './components/task-edit-modal/add-task-modal.component';\nimport { CategoryInputComponent } from './components/category-input/category-input.component';\nimport { CategoryListComponent } from './components/category-list/category-list.component';\nimport { PriorityPipe } from './pipes/priority/priority.pipe';\nimport { SearchFilterPipe } from './pipes/search-filter/search-filter.pipe';\nimport { TestitestComponent } from './components/testitest/testitest.component';\nimport { FontAwesomeModule, FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faAngleDoubleUp, faAngleDown, faAngleUp, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { AutoFocusDirective } from './directives/auto-focus.directive';\n\n/*\ntodo: highlight clicked category\n + make category unselectable\n + if category delete delete from clickedCat list\n + reset btn to reset all filters\n */\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskInputComponent,\n    TaskTableComponent,\n    AddTaskModalComponent,\n    CategoryInputComponent,\n    CategoryListComponent,\n    PriorityPipe,\n    SearchFilterPipe,\n    TestitestComponent,\n    AutoFocusDirective\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    NgbModule,\n    FontAwesomeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(private library: FaIconLibrary) {\n    library.addIcons(faAngleDoubleUp, faAngleUp, faAngleDown, faTrash, faEdit);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport { TaskService } from '../../service/taskService/task.service';\nimport { Task } from '../../model/Task';\nimport { CategoryService } from '../../service/categoryService/category.service';\nimport { Category } from '../../model/Category';\n\n@Component({\n  selector: 'app-task-table',\n  templateUrl: './task-table.component.html',\n  styleUrls: ['./task-table.component.css']\n})\nexport class TaskTableComponent implements OnInit {\n\n  public searchText: string;\n  public clickedCategories: Category[];\n\n  constructor(public taskService: TaskService,\n              public categoryService: CategoryService) {\n    this.searchText = '';\n    // console.log(taskService.taskList);\n    this.clickedCategories = this.categoryService.categoriesClicked;\n  }\n\n  openEditModal(editEntry: Task): void {\n    this.taskService.setTaskToEdit(editEntry);\n    this.taskService.openTaskEditModal(editEntry).then();\n  }\n\n  ngOnInit(): void {\n  }\n\n  done(id: number): void{\n    this.taskService.doneTask(id);\n  }\n\n  delete(id: number): void{\n    this.taskService.deleteTask(id);\n  }\n\n  get _taskList(): Task[] {\n    return this.taskService.taskList;\n  }\n\n}\n","<div class=\"todolist\">\n  <div class=\"row\">\n  <div class=\"col-2\">\n    <h1>TodoList</h1>\n  </div>\n  <div class=\"col-8\">\n    <input [(ngModel)]=\"searchText\" class=\"form-control search\"  type=\"text\" placeholder=\"Search Todo\" aria-label=\"Search\">\n  </div>\n</div>\n  <table class=\"table table-hover\">\n  <thead>\n  <tr class=\"row\">\n    <th class=\"col\">Done?</th>\n    <th class=\"col\">Title</th>\n    <th class=\"col\">Category</th>\n    <th class=\"col\">Priority</th>\n    <th class=\"col\">Edit</th>\n    <th class=\"col\">Delete</th>\n    <th class=\"col-2\">Date</th>\n  </tr>\n  </thead>\n  <tbody>\n  <tr class=\"row\"\n      *ngFor=\"let task of this._taskList | searchFilter: searchText : clickedCategories : searchText != '' : this.clickedCategories.length != 0; let i = index;\"\n  >\n    <td class=\"col\">\n      <label for=\"doneCheckbox{{i}}\">\n        <!-- Default unchecked -->\n        <input id=\"doneCheckbox{{i}}\" tabindex=\"0\" type=\"checkbox\" (change)=\"done(task.id)\">\n      </label>\n    </td>\n    <td class=\"col\">\n      <span [className]=\"this.task.done ? 'finish-title' : 'title'\">{{this.task.title}}</span>\n    </td>\n    <td class=\"col\">\n      <span>{{this.task.category.title}}</span>\n    </td>\n    <td *ngIf=\"this.task.priority == 2 || this.task.priority == 'high'; then highBlock\"></td>\n    <td *ngIf=\"this.task.priority == 1 || this.task.priority == 'medium'; then mediumBlock\"></td>\n    <td *ngIf=\"this.task.priority == 0 || this.task.priority == 'low'; then lowBlock\"></td>\n    <ng-template #highBlock><td class=\"col\"><fa-icon style=\"color: #ff0f0f\" [icon]=\"['fas', 'angle-double-up']\"></fa-icon></td></ng-template>\n    <ng-template #mediumBlock><td class=\"col\"><fa-icon style=\"color: #ffa500\" [icon]=\"['fas', 'angle-up']\"></fa-icon></td></ng-template>\n    <ng-template #lowBlock><td class=\"col\"><fa-icon [icon]=\"['fas', 'angle-down']\"></fa-icon></td></ng-template>\n    <td class=\"col\">\n      <button class=\"btn btn-outline-secondary\" (click)=\"openEditModal(task)\"><fa-icon [icon]=\"['fas', 'edit']\"></fa-icon></button>\n    </td>\n    <td class=\"col\">\n      <button class=\"btn btn-outline-danger\" (click)=\"delete(task.id)\"><fa-icon [icon]=\"['fas', 'trash']\"></fa-icon></button>\n    </td>\n    <td class=\"col-2\">{{task.date | date: 'd. MMMM y, H:mm:ss'}}</td>\n  </tr>\n  </tbody>\n</table>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Category } from '../../model/Category';\nimport { testCat1, testCat2, testCat3, testCat4, testCat5} from '../../model/mocks/categoryMock';\nimport { TaskService } from '../taskService/task.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n  constructor() {\n  }\n  CATEGORYLIST: Category[] = [testCat1, testCat2, testCat3, testCat4, testCat5];\n\n  categoriesClicked: Category[] = [];\n\n  taskService: any;\n\n  setTaskService(taskService: TaskService): void {\n    this.taskService = taskService;\n  }\n\n  addCategory(newCategory: Category): void {\n    if (newCategory.title.trim() === '') {\n      return;\n    }\n    this.CATEGORYLIST.push(new Category(newCategory.title));\n  }\n\n  get categoryList(): Category[] {\n    return this.CATEGORYLIST;\n  }\n\n  deleteCategory(id: number): void {\n    for (let i = 0; i < this.CATEGORYLIST.length; i++) {\n      if (this.CATEGORYLIST[i].id === id) {\n        this.CATEGORYLIST.splice(i, 1);\n      }\n    }\n  }\n\n  toggleCatInCategoriesClicked(id: number): void {\n    for (const cat of this.CATEGORYLIST) {\n      if (cat.id === id) {\n        if (!this.categoriesClicked.includes(cat)) {\n          this.categoriesClicked.push(cat);\n        } else if (this.categoriesClicked.includes(cat)) {\n          this.categoriesClicked.splice(this.categoriesClicked.indexOf(cat), 1);\n        }\n      }\n    }\n    console.log(this.categoriesClicked);\n\n\n\n  }\n\n\n  filterCategories(): void {\n\n  }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { TaskService } from '../../service/taskService/task.service';\nimport { CategoryService } from '../../service/categoryService/category.service';\nimport { Task } from '../../model/Task';\nimport { Priority } from '../../model/Priority';\nimport { Category } from '../../model/Category';\n\n@Component({\n  selector: 'app-task-input',\n  templateUrl: './task-input.component.html',\n  styleUrls: ['./task-input.component.css']\n})\nexport class TaskInputComponent implements OnInit {\n  @Output() addTodo: EventEmitter<any> = new EventEmitter();\n  public title: string;\n  public priority: Priority;\n  public categoryTitle: string;\n\n\n  public newEntry = new Task('', new Category(''), Priority.low);\n  constructor(public taskService: TaskService,\n              public categoryService: CategoryService) {\n    // empty field\n    this.title = '';\n    this.priority = Priority.low;\n    this.categoryTitle = '';\n  }\n\n  ngOnInit(): void {\n  }\n\n  // submitting the form\n  onSubmit(): void {\n    // call service\n    this.newEntry.title = this.title;\n    this.newEntry.priority = this.priority;\n    this.newEntry.category = new Category(this.categoryTitle);\n    this.taskService.addTask(this.newEntry);\n    // @ts-ignore\n    document.getElementById('taskInput').value = '';\n    // @ts-ignore\n    document.getElementById('taskCategoryInput').value = '';\n  }\n}\n","<div class=\"container\" id=\"task-container\">\n  <div id=\"form-wrapper\">\n    <form id=\"form\" (ngSubmit)=\"onSubmit()\">\n      <h3>Add New Todo</h3>\n      <div class=\"input-group\">\n        <label for=\"taskInput\"></label>\n        <input id=\"taskInput\" value='' type=\"text\" class=\"form-control col-4\" required name=\"title\" placeholder=\"Todo\"\n               [(ngModel)]=\"title\">\n\n        <label for=\"taskCategoryInput\"></label>\n        <select name=\"Category\" id=\"taskCategoryInput\" [(ngModel)]=\"categoryTitle\" class=\"form-control col-4\">\n          <option selected disabled value=\"\">Category</option>\n          <option *ngFor=\"let cat of this.categoryService.CATEGORYLIST\"> {{cat.title}} </option>\n        </select>\n\n        <label for=\"prio\"></label>\n        <select name=\"priority\" id=\"prio\" [(ngModel)]=\"priority\" class=\"form-control col-4\">\n          <option selected disabled value=\"\">PriorityMock</option>\n          <option value=\"low\">low</option>\n          <option value=\"medium\">medium</option>\n          <option value=\"high\">high</option>\n        </select>\n\n        <div class=\"input-group-append\">\n          <button type=\"submit\" id=\"submit\" class=\"btn\">Submit</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Priority } from '../../model/Priority';\n\n@Pipe({\n  name: 'priority'\n})\nexport class PriorityPipe implements PipeTransform {\n  transform(value: Priority): string {\n    switch (value) {\n      case Priority.low:\n        return 'low';\n      case Priority.medium:\n        return 'medium';\n      case Priority.high:\n        return 'high';\n      default:\n        return value;\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Task} from '../../model/Task';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {AddTaskModalComponent} from '../../components/task-edit-modal/add-task-modal.component';\nimport {Priority} from '../../model/Priority';\nimport {Category} from '../../model/Category';\nimport {taskListMock} from '../../model/mocks/taskMock';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private modalService: NgbModal,\n              ) {\n  }\n\n  public taskToEdit: Task = new Task('Test', new Category('test'), Priority.low);\n\n  // tslint:disable-next-line:variable-name\n  _taskList: Task[] = taskListMock;\n\n  addTask(newEntry: Task): void {\n    if (newEntry.title.trim() === '') {\n      return;\n    }\n    // saving new task\n    this.taskList.push(new Task(newEntry.title, newEntry.category, newEntry.priority));\n  }\n\n  editTask(editEntry: Task, title: string, category: Category, priority: Priority): void {\n    for (const task of this.taskList) {\n      // get the right task\n      if (editEntry.id === task.id) {\n        // check whats to edit\n        if (title !== '') {\n          task.title = title;\n        }\n        if (category.title !== '') {\n          task.category = category;\n        }\n        if (priority in Priority) {\n          task.priority = priority;\n        }\n      }\n    }\n  }\n\n\n  setTaskToEdit(value: Task): void{\n    this.taskToEdit = value;\n  }\n\n  async openTaskEditModal(editEntry: Task): Promise<void> {\n    const modalReference = this.modalService.open(AddTaskModalComponent);\n    try {\n      // get input values from modal via Promise on modal.close\n      const result = await modalReference.result;\n      // set value from result if they were set\n      const title: string = result.title !== '' ? result.title : '';\n      const priority: Priority = result.priority in Priority ? result.priority : Priority.low;\n      const category: string = result.categoryTitle !== '' ? result.categoryTitle : '';\n      // edit the task with the value from modal\n      this.editTask(editEntry, title, new Category(category), priority);\n    } catch (err) {\n      console.log(`something went wrong with the edit. Error: ${err}`);\n    }\n  }\n\n  doneTask(id: number): void {\n    for (const item of this._taskList) {\n      if (item.id === id) {\n        item.done = !item.done;\n      }\n    }\n  }\n\n  get taskList(): Task[] {\n    return this._taskList;\n  }\n\n  deleteTask(id: number): void {\n    for (let i = 0; i < this._taskList.length; i++) {\n      if (this._taskList[i].id === id) {\n        this._taskList.splice(i, 1);\n      }\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {CategoryService} from '../../service/categoryService/category.service';\nimport {Category} from '../../model/Category';\n\n@Component({\n  selector: 'app-category-element',\n  templateUrl: './category-list.component.html',\n  styleUrls: ['./category-list.component.css']\n})\nexport class CategoryListComponent implements OnInit {\n\n  constructor(public categoryService: CategoryService) {\n    console.log(categoryService.CATEGORYLIST);\n  }\n\n  get categoryList(): Category[] {\n    return this.categoryService.CATEGORYLIST;\n  }\n\n  ngOnInit(): void {\n  }\n\n  delete(id: number): void{\n    this.categoryService.deleteCategory(id);\n  }\n  categoryFilter(id: number): void {\n    this.categoryService.toggleCatInCategoriesClicked(id);\n    }\n}\n","<div class=\"form-wrapper\">\n  <h4>Filter by Category</h4>\n  <div class=\"container\" (click)=\"categoryFilter(category.id)\"\n       *ngFor=\"let category of categoryList; let i = index;\"\n  >\n    <div class=\"card\" *ngIf=\"!categoryService.categoriesClicked.includes(category); else isClickedBlock\">\n          <span>\n            {{category.title}}\n            <button (click)=\"delete(category.id)\" class=\"btn\">x</button>\n          </span>\n\n    </div>\n    <hr>\n    <ng-template #isClickedBlock>\n      <div class=\"card\" style=\"background-color: lightgrey\">\n      <span>\n        {{category.title}}\n        <button (click)=\"delete(category.id)\" class=\"btn\">x</button>\n      </span>\n      </div>\n\n    </ng-template>\n    <!--        <app-category-list></app-category-list>-->\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}